// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Service.DwhBridge.Database;

#nullable disable

namespace Service.DwhBridge.Database.Migrations
{
    [DbContext(typeof(DwhContext))]
    [Migration("20220701112626_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("bridge")
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Service.DwhBridge.Database.Models.EarnDashboardAssetEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AssetSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EarnDashboardAssets", "bridge");
                });

            modelBuilder.Entity("Service.DwhBridge.Database.Models.EarnDashboardAssetEntityByDay", b =>
                {
                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.Property<string>("AssetSymbol")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TimeStamp", "AssetSymbol");

                    b.ToTable("EarnDashboardAssetsByDay", "bridge");
                });

            modelBuilder.Entity("Service.DwhBridge.Database.Models.EarnDashboardTotalEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EarnDashboardTotal", "bridge");
                });

            modelBuilder.Entity("Service.DwhBridge.Database.Models.EarnDashboardTotalEntityByDay", b =>
                {
                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("TimeStamp");

                    b.ToTable("EarnDashboardTotalByDay", "bridge");
                });

            modelBuilder.Entity("Service.DwhBridge.Database.Models.EarnDashboardAssetEntity", b =>
                {
                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardAssetRecordInfoDto", "ClientInfo", b1 =>
                        {
                            b1.Property<long>("EarnDashboardAssetEntityId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardAssetEntityId");

                            b1.ToTable("EarnDashboardAssets", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardAssetEntityId");
                        });

                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardAssetRecordInfoDto", "NetInfo", b1 =>
                        {
                            b1.Property<long>("EarnDashboardAssetEntityId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardAssetEntityId");

                            b1.ToTable("EarnDashboardAssets", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardAssetEntityId");
                        });

                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardAssetRecordInfoDto", "SimpleInfo", b1 =>
                        {
                            b1.Property<long>("EarnDashboardAssetEntityId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardAssetEntityId");

                            b1.ToTable("EarnDashboardAssets", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardAssetEntityId");
                        });

                    b.Navigation("ClientInfo");

                    b.Navigation("NetInfo");

                    b.Navigation("SimpleInfo");
                });

            modelBuilder.Entity("Service.DwhBridge.Database.Models.EarnDashboardAssetEntityByDay", b =>
                {
                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardAssetRecordInfoDto", "ClientInfo", b1 =>
                        {
                            b1.Property<DateTime>("EarnDashboardAssetEntityByDayTimeStamp")
                                .HasColumnType("datetime");

                            b1.Property<string>("EarnDashboardAssetEntityByDayAssetSymbol")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardAssetEntityByDayTimeStamp", "EarnDashboardAssetEntityByDayAssetSymbol");

                            b1.ToTable("EarnDashboardAssetsByDay", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardAssetEntityByDayTimeStamp", "EarnDashboardAssetEntityByDayAssetSymbol");
                        });

                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardAssetRecordInfoDto", "NetInfo", b1 =>
                        {
                            b1.Property<DateTime>("EarnDashboardAssetEntityByDayTimeStamp")
                                .HasColumnType("datetime");

                            b1.Property<string>("EarnDashboardAssetEntityByDayAssetSymbol")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardAssetEntityByDayTimeStamp", "EarnDashboardAssetEntityByDayAssetSymbol");

                            b1.ToTable("EarnDashboardAssetsByDay", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardAssetEntityByDayTimeStamp", "EarnDashboardAssetEntityByDayAssetSymbol");
                        });

                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardAssetRecordInfoDto", "SimpleInfo", b1 =>
                        {
                            b1.Property<DateTime>("EarnDashboardAssetEntityByDayTimeStamp")
                                .HasColumnType("datetime");

                            b1.Property<string>("EarnDashboardAssetEntityByDayAssetSymbol")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardAssetEntityByDayTimeStamp", "EarnDashboardAssetEntityByDayAssetSymbol");

                            b1.ToTable("EarnDashboardAssetsByDay", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardAssetEntityByDayTimeStamp", "EarnDashboardAssetEntityByDayAssetSymbol");
                        });

                    b.Navigation("ClientInfo");

                    b.Navigation("NetInfo");

                    b.Navigation("SimpleInfo");
                });

            modelBuilder.Entity("Service.DwhBridge.Database.Models.EarnDashboardTotalEntity", b =>
                {
                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardTotalRecordInfoDto", "ClientInfo", b1 =>
                        {
                            b1.Property<long>("EarnDashboardTotalEntityId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("InterestPayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardTotalEntityId");

                            b1.ToTable("EarnDashboardTotal", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardTotalEntityId");
                        });

                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardTotalRecordInfoDto", "NetInfo", b1 =>
                        {
                            b1.Property<long>("EarnDashboardTotalEntityId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("InterestPayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardTotalEntityId");

                            b1.ToTable("EarnDashboardTotal", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardTotalEntityId");
                        });

                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardTotalRecordInfoDto", "SimpleInfo", b1 =>
                        {
                            b1.Property<long>("EarnDashboardTotalEntityId")
                                .HasColumnType("bigint");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("InterestPayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardTotalEntityId");

                            b1.ToTable("EarnDashboardTotal", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardTotalEntityId");
                        });

                    b.Navigation("ClientInfo");

                    b.Navigation("NetInfo");

                    b.Navigation("SimpleInfo");
                });

            modelBuilder.Entity("Service.DwhBridge.Database.Models.EarnDashboardTotalEntityByDay", b =>
                {
                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardTotalRecordInfoDto", "ClientInfo", b1 =>
                        {
                            b1.Property<DateTime>("EarnDashboardTotalEntityByDayTimeStamp")
                                .HasColumnType("datetime");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("InterestPayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardTotalEntityByDayTimeStamp");

                            b1.ToTable("EarnDashboardTotalByDay", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardTotalEntityByDayTimeStamp");
                        });

                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardTotalRecordInfoDto", "NetInfo", b1 =>
                        {
                            b1.Property<DateTime>("EarnDashboardTotalEntityByDayTimeStamp")
                                .HasColumnType("datetime");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("InterestPayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardTotalEntityByDayTimeStamp");

                            b1.ToTable("EarnDashboardTotalByDay", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardTotalEntityByDayTimeStamp");
                        });

                    b.OwnsOne("Service.HighYieldEngine.Domain.Models.Dtos.EarnDashboardTotalRecordInfoDto", "SimpleInfo", b1 =>
                        {
                            b1.Property<DateTime>("EarnDashboardTotalEntityByDayTimeStamp")
                                .HasColumnType("datetime");

                            b1.Property<decimal>("AmountUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Apy")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("InterestPayoutUsd")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("EarnDashboardTotalEntityByDayTimeStamp");

                            b1.ToTable("EarnDashboardTotalByDay", "bridge");

                            b1.WithOwner()
                                .HasForeignKey("EarnDashboardTotalEntityByDayTimeStamp");
                        });

                    b.Navigation("ClientInfo");

                    b.Navigation("NetInfo");

                    b.Navigation("SimpleInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
